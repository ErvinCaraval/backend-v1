name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run linting
      run: npm run lint || echo "Linting not configured, skipping..."
    
    - name: Run tests
      run: npm test
    
    - name: Run security audit
      run: npm audit --audit-level=moderate || echo "Security audit completed with warnings"
    
    - name: Check for known vulnerabilities
      run: |
        # Verificación básica de vulnerabilidades sin GitHub Advanced Security
        if command -v npm-audit-ci &> /dev/null; then
          npm-audit-ci --config .audit-ci.json
        else
          echo "npm-audit-ci not available, using basic npm audit"
          npm audit --audit-level=high
        fi

  security-check:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Check for security vulnerabilities
      run: |
        echo "Checking for known security vulnerabilities..."
        npm audit --audit-level=high --json > audit-results.json || true
        
        # Verificar si hay vulnerabilidades críticas
        if [ -f audit-results.json ]; then
          HIGH_VULNS=$(cat audit-results.json | jq '.metadata.vulnerabilities.high // 0')
          CRITICAL_VULNS=$(cat audit-results.json | jq '.metadata.vulnerabilities.critical // 0')
          
          if [ "$HIGH_VULNS" -gt 0 ] || [ "$CRITICAL_VULNS" -gt 0 ]; then
            echo "⚠️ Found $CRITICAL_VULNS critical and $HIGH_VULNS high severity vulnerabilities"
            echo "Please review and update dependencies"
            exit 1
          else
            echo "✅ No critical or high severity vulnerabilities found"
          fi
        fi
    
    - name: Check for outdated dependencies
      run: |
        echo "Checking for outdated dependencies..."
        npm outdated || echo "Some dependencies are outdated - consider updating"

  build:
    runs-on: ubuntu-latest
    needs: [test]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Build project
      run: |
        echo "Building project..."
        # Agregar comandos de build si los tienes
        echo "Build completed successfully"
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: build-files
        path: |
          package.json
          package-lock.json
        retention-days: 7